name: Docker

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    if: false # FIXME: Remove
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the PR's image
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v4
        with:
          context: docker
          push: true
          tags: ghcr.io/gear-dapps/gear-env:pr-${{ github.event.number }}

      - name: Build and push the image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v4
        with:
          context: docker
          push: true
          tags: ghcr.io/gear-dapps/gear-env:latest,ghcr.io/gear-dapps/gear-env:1.0

  test:
    # needs: build # FIXME: Uncomment
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container: ghcr.io/gear-dapps/gear-env:pr-${{ github.event.number }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: gear-dapps/app

      - name: Run pre-checks
        run: |
          pwd
          whoami
          rustup --version
          rustc --version
          cargo --version

      - name: Run `app` tests
        run: make full-test

      - name: Build the `app`
        run: make build

      - name: Remove the PR's image
        uses: actions/delete-package-versions@v4
        with:
          package-name: gear-env
          package-type: container
          package-version-ids: pr-${{ github.event.number }}
