name: Docker

on:
  pull_request:
    branches: [master]

  push:
    branches: [master]
    tags: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the PR's image
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v4
        with:
          context: docker
          push: true
          tags: ghcr.io/gear-dapps/gear-env:pr-${{ github.event.number }}

      - name: Build and push the latest image (master)
        if: github.event_name == 'push' && endsWith(github.ref, 'master')
        uses: docker/build-push-action@v4
        with:
          context: docker
          push: true
          tags: ghcr.io/gear-dapps/gear-env:latest

      - name: Get version from tag
        if: github.event_name == 'push' && !endsWith(github.ref, 'master')
        id: version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Show version
        if: github.event_name == 'push' && !endsWith(github.ref, 'master')
        run: echo ${{ steps.version.outputs.VERSION }}

      - name: Build and push the stable image (tag)
        if: github.event_name == 'push' && !endsWith(github.ref, 'master')
        uses: docker/build-push-action@v4
        with:
          context: docker
          push: true
          tags: >-
            ghcr.io/gear-dapps/gear-env:stable,
            ghcr.io/gear-dapps/gear-env:${{ steps.version.outputs.VERSION }}

  test:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container: ghcr.io/gear-dapps/gear-env:pr-${{ github.event.number }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: gear-dapps/app

      - name: List versions
        run: |
          rustc --version
          rustc +nightly --version
          node --version
          yarn --version
          gear --version

      - name: Run `app` tests
        run: make full-test

      - name: Build the `app`
        run: make build
